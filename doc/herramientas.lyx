#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass classicthesis
\begin_preamble
\usepackage[spanish,es-lcroman,es-tabla]{babel}
\end_preamble
\use_default_options true
\begin_modules
theorems-ams-bytype
theorems-chap-bytype
\end_modules
\maintain_unincluded_children false
\language spanish
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref section
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language french
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
\begin_inset CommandInset label
LatexCommand label
name "chap:herramientas"

\end_inset

Detalles de implementación
\end_layout

\begin_layout Standard
Ya contamos con todas las bases teóricas para poder buscar simetrías en
 ontologías expresadas en el lenguaje OWL.
 En este capítulo presentamos el conjunto de herramientas utilizadas para
 dicha tarea.
\end_layout

\begin_layout Section
Arquitectura general
\end_layout

\begin_layout Standard
El siguiente diagrama describe los principales componentes así como el flujo
 de la herramienta de detección desarrollada
\begin_inset Foot
status open

\begin_layout Plain Layout
https://github.com/giovannirescia/thesis
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename gfx/ArquitecturaGeneral.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Arquitectura general para la detección de simetrías
\begin_inset CommandInset label
LatexCommand label
name "fig:Arquitectura-General"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Como dato de entrada, nuestra herramienta recibe una ontología en formato
 OWL.
 El módulo 
\series bold
\emph on
DL2ML
\series default
\emph default
, implementado en 
\emph on
Scala
\begin_inset Foot
status open

\begin_layout Plain Layout
https://www.scala-lang.org
\end_layout

\end_inset


\emph default
, se encarga de manipular esta ontología, cargándola en memoria y realizando
 una serie de operaciones que describiremos a continuación.
 Para ello se utiliza 
\emph on
Scowl
\emph default

\begin_inset Foot
status open

\begin_layout Plain Layout
https://github.com/phenoscape/scowl
\end_layout

\end_inset

 una implementación de la 
\emph on
OWL API
\begin_inset CommandInset citation
LatexCommand cite
key "OWLAPI"

\end_inset


\emph default
.
 
\end_layout

\begin_layout Standard
La funcionalidad de DL2ML puede dividirse en dos tareas: primero toma la
 ontología de entrada y extrae todos los axiomas de la TBox.
 Luego, a cada axioma de la TBox se lo examina recursivamente usando la
 función de traducción vista en el Capítulo 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:dl2ml"

\end_inset

 para generar una fórmula modal en formato 
\emph on
intohylo
\emph default
 
\begin_inset CommandInset citation
LatexCommand cite
key "intohylo"

\end_inset

.
\end_layout

\begin_layout Standard
El módulo 
\series bold
\emph on
KCNF
\series default
\emph default
 toma la fórmula modal generada por DL2ML y devuelve una fórmula, semánticamente
 igual, en CNF modal.
\end_layout

\begin_layout Standard
Una vez que contamos con nuestra fórmula en CNF modal, el módulo 
\series bold
\emph on
SY4NCL
\series default
\emph default
, desarrollado en Haskell, construye el grafo de detección de simetrías,
 siguiendo el algoritmo descrito en la Definición 
\begin_inset CommandInset ref
LatexCommand ref
reference "algo-sim-glob"

\end_inset

 y lo disponibiliza en formato Bliss 
\begin_inset CommandInset citation
LatexCommand cite
key "Bliss"

\end_inset

 junto con un mapeo entre nodos y literales y estadísticas sobre el grafo.
\end_layout

\begin_layout Standard
El módulo 
\series bold
\emph on
BLISS
\series default
\emph default
 toma la especificación de un grafo y realiza la búsqueda de automorfismos
 en éste.
 Un detalle importante es que BLISS solo devuelve los automorfismos 
\emph on
generadores
\emph default
.
 Éstos son aquellos automorfismos que permiten generar todos los automorfismos
 del grupo.
\end_layout

\begin_layout Standard
Si el grafo tiene automorfismos no triviales, entonces el módulo 
\series bold
\emph on
MAPPER
\series default
\emph default
 reconstruye las simetrías de la ontología primero utilizando el mapeo entre
 nodos y literales generado por SY4NCL, y luego realizando un mapeo 
\emph on
de vuelta
\emph default
 entre símbolos proposicionales a conceptos dentro de nuestra ontología.
\end_layout

\begin_layout Standard
Cabe mencionar que el componente DL2ML fue desarrollado específicamente
 para el trabajo de esta tesis, mientras que los módulos KCNF y SY4NCL fueron
 adaptados para que funcionen en el caso de lógicas multi modales.
 La herramienta BLISS no requirió de ninguna modificación.
\end_layout

\begin_layout Standard
Por último, es importante resaltar que las simetrías pueden ser detectadas
 de manera independiente a las tareas de inferencia, i.e., se pueden detectar
 las simetrías previamente y utilizarlas luego para cada consulta de inferencia.
 Esto es de gran importancia ya que no resultaría muy práctico tener que
 realizar la detección de simetrías cada vez que se le hace una consulta
 a la base de conocimiento, dado que obtener las simetrías puede ser una
 tarea relativamente costosa.
\end_layout

\begin_layout Section
Probando las herramientas
\end_layout

\begin_layout Standard
Para ilustrar el funcionamiento de nuestra herramienta veamos cómo es una
 ejecución de principio a fin de la misma.
\end_layout

\begin_layout Example
Consideremos la siguiente base de conocimiento 
\begin_inset Formula $\mathcal{KB}=\langle TBox,ABox\rangle$
\end_inset

 donde la ABox es vacía y la TBox está dada por las definiciones de la 
\begin_inset Flex CT - auto cross-reference
status collapsed

\begin_layout Plain Layout

fig:ontologiaDL
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="12" columns="3">
<features tabularvalignment="middle">
<column alignment="right" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $gato$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\sqsubseteq$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $mamífero$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $perro$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\sqsubseteq$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $mamífero$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Formula $caballo$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\sqsubseteq$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $mamífero$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Formula $loro$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\sqsubseteq$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $ave$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\neg(mamífero$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\equiv$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $ave)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $pichón$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\equiv$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $loro\sqcap\exists críaDe.loro$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $gatito$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\equiv$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $gato\sqcap\exists críaDe.gato$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $cachorro$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\equiv$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $perro\sqcap\exists críaDe.perro$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $potrillo$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\equiv$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $caballo\sqcap\exists críaDe.caballo$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $caballo$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\equiv$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $mamífero\sqcap\exists cuadrúpedo.mamífero$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $gato$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\equiv$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $mamífero\sqcap\exists cuadrúpedo.mamífero$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $perro$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\equiv$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $mamífero\sqcap\exists cuadrúpedo.mamífero$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:ontologiaDL"

\end_inset

Descripción de la TBox
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Notar que las clases 
\emph on
caballo
\emph default
, 
\emph on
perro 
\emph default
y 
\emph on
gato
\emph default
 comparten la mismas propiedades, o sea, todas éstas son subclases de los
 
\emph on
mamíferos
\emph default
 y a la vez son 
\emph on
cuadrúpedos
\emph default
.
\end_layout

\begin_layout Standard
Ahora representamos la ontología de la 
\begin_inset Flex CT - auto cross-reference
status collapsed

\begin_layout Plain Layout

fig:ontologiaDL
\end_layout

\end_inset

 en lenguaje OWL.
\end_layout

\begin_layout Standard
A modo ilustrativo, primero mostraremos cómo se puede definir una ontología
 en OWL programáticamente.
\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Standard
La 
\begin_inset Flex CT - auto cross-reference
status open

\begin_layout Plain Layout

fig:defOnt
\end_layout

\end_inset

 muestra el código en Scala que construye la ontología utilizando Scowl.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

1.
 // Creación de la ontología
\end_layout

\begin_layout Plain Layout

2.
 val manager = OWLManager.createOWLOntologyManager() 
\end_layout

\begin_layout Plain Layout

3.
 val ontology = manager.createOntology()
\end_layout

\begin_layout Plain Layout

4.
 val prfx = "http://www.famaf.unc.edu.ar/giovannirescia/test.owl"
\end_layout

\begin_layout Plain Layout

5.
\end_layout

\begin_layout Plain Layout

6.
 // Definición de clases
\end_layout

\begin_layout Plain Layout

7.
 val perro = Class(prfx#perro) 
\end_layout

\begin_layout Plain Layout

8.
 val cachorro = Class(prfx#cachorro) 
\end_layout

\begin_layout Plain Layout

9.
 val gato = Class(prfx#gato) 
\end_layout

\begin_layout Plain Layout

10.
 val gatito = Class(prfx#gatito) 
\end_layout

\begin_layout Plain Layout

11.
 val caballo = Class(prfx#caballo) 
\end_layout

\begin_layout Plain Layout

12.
 val potrillo = Class(prfx#potrillo) 
\end_layout

\begin_layout Plain Layout

13.
 val loro = Class(prfx#loro) 
\end_layout

\begin_layout Plain Layout

14.
 val pichón = Class(prfx#pichón) 
\end_layout

\begin_layout Plain Layout

15.
 val ave = Class(prfx#ave) 
\end_layout

\begin_layout Plain Layout

16.
 val mamífero = Class(prfx#mamífero)
\end_layout

\begin_layout Plain Layout

17.
\end_layout

\begin_layout Plain Layout

18.
 // Definición de Propiedades
\end_layout

\begin_layout Plain Layout

19.
 val cuadrúpedo = ObjectProperty(prfx#cuadrúpedo) 
\end_layout

\begin_layout Plain Layout

20.
 val críaDe = ObjectProperty(prfx#críaDe) 
\end_layout

\begin_layout Plain Layout

21.
\end_layout

\begin_layout Plain Layout

22.
 var xs = ListBuffer[OWLAxiom]
\end_layout

\begin_layout Plain Layout

23.
\end_layout

\begin_layout Plain Layout

24.
 // Relaciones entre las clases
\end_layout

\begin_layout Plain Layout

25.
 xs += gato SubClassOf mamífero 
\end_layout

\begin_layout Plain Layout

26.
 xs += perro SubClassOf mamífero 
\end_layout

\begin_layout Plain Layout

27.
 xs += caballo SubClassOf mamífero
\end_layout

\begin_layout Plain Layout

28.
 xs += loro SubClassOf ave 
\end_layout

\begin_layout Plain Layout

29.
 xs += ave DisjointWith mamífero
\end_layout

\begin_layout Plain Layout

30.
 xs += pichón EquivalentTo (loro and (críaDe some loro))
\end_layout

\begin_layout Plain Layout

31.
 xs += gatito EquivalentTo (gato and (críaDe some gato))
\end_layout

\begin_layout Plain Layout

32.
 xs += cachorro EquivalentTo (perro and (críaDe some perro))
\end_layout

\begin_layout Plain Layout

33.
 xs += potrillo EquivalentTo (caballo and (críaDe some caballo)) 
\end_layout

\begin_layout Plain Layout

34.
 xs += caballo EquivalentTo (mamífero and (cuadrúpedo some mamífero)) 
\end_layout

\begin_layout Plain Layout

35.
 xs += gato EquivalentTo (mamífero and (cuadrúpedo some mamífero))
\end_layout

\begin_layout Plain Layout

36.
 xs += perro EquivalentTo (mamífero and (cuadrúpedo some mamífero))
\end_layout

\begin_layout Plain Layout

37.
\end_layout

\begin_layout Plain Layout

38.
 // Guardamos los cambios en la ontología
\end_layout

\begin_layout Plain Layout

39.
 xs.foreach(axiom => manager.addAxiom(ontology, axiom)) 
\end_layout

\begin_layout Plain Layout

40.
 manager.saveOntology(ontology, file)
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:defOnt"

\end_inset

Definición de la ontología en Scala
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Hasta ahora lo que hicimos fue:
\end_layout

\begin_layout Itemize
En la línea 2, crear un 
\emph on
administrador de ontologías
\emph default
, que nos permitirá crear y manipular ontologías.
\end_layout

\begin_layout Itemize
En la línea 3, creamos una ontología.
\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Itemize
Entre las líneas 6 y 16, creamos las clases de interés como 
\emph on
perro, gato, caballo 
\emph default
y
\emph on
 loro
\emph default
, cada una con su respectiva cría.
 También las clases a las que esos animales pertenecen, o sea, 
\emph on
mamífero
\emph default
 y 
\emph on
ave
\emph default
.
\end_layout

\begin_layout Itemize
Las líneas 19 y 20, definen propiedades que aplicaremos a las clases definidas.
\end_layout

\begin_layout Itemize
Entre las líneas 25 y 36 definimos los axiomas de interés: cómo se relacionan
 las clases entre sí y qué propiedad afecta a cuál clase.
\end_layout

\begin_layout Itemize
En la línea 39 utilizamos el administrador de ontologías para cargar todos
 los axiomas definidos.
\end_layout

\begin_layout Itemize
En la línea 40 guardamos la ontología en disco.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Itemize
Resumamos los datos más relevantes obtenidos con respecto a la ontología:
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
Expresividad: 
\begin_inset Formula $\mathcal{AL}$
\end_inset


\end_layout

\begin_layout Itemize

\emph on
Cantidad de axiomas en nuestra ontolgía: 
\begin_inset Formula $12$
\end_inset


\end_layout

\begin_layout Itemize

\emph on
Tipos de axiomas: SubClassOf, EquivalentClasses, DisjointClasses
\end_layout

\end_deeper
\begin_layout Standard

\emph on
Nota: la creación de esta ontología es a modo ilustrativo.
 Para fines prácticos las ontologías están ya especificadas en OWL y las
 mismas son parseadas por el módulo dl2ml.
\end_layout

\begin_layout Standard
Parte del código XML que se generó para nuestra ontología está descrito
 en la 
\begin_inset Flex CT - auto cross-reference
status open

\begin_layout Plain Layout

fig:XMLcode
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

<?xml version="1.0"?>
\end_layout

\begin_layout Plain Layout

<rdf:RDF xmlns="http://www.w3.org/2002/07/owl#"      
\end_layout

\begin_layout Plain Layout

	xml:base="http://www.w3.org/2002/07/owl"      
\end_layout

\begin_layout Plain Layout

	xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"      
\end_layout

\begin_layout Plain Layout

	xmlns:owl="http://www.w3.org/2002/07/owl#"      
\end_layout

\begin_layout Plain Layout

	xmlns:xml="http://www.w3.org/XML/1998/namespace"      
\end_layout

\begin_layout Plain Layout

	xmlns:xsd="http://www.w3.org/2001/XMLSchema#"      
\end_layout

\begin_layout Plain Layout

	xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#">     
\end_layout

\begin_layout Plain Layout

	<Ontology/>
\end_layout

\begin_layout Plain Layout

    
\end_layout

\begin_layout Plain Layout

    <!-- http://www.famaf.unc.edu.ar/giovanni/test.owl#cuadrúpedo -->
\end_layout

\begin_layout Plain Layout

	<ObjectProperty rdf:about="http://www.famaf.unc.edu.ar/giovanni/test.owl#cuadrúpedo"
/>     
\end_layout

\begin_layout Plain Layout

   	 
\end_layout

\begin_layout Plain Layout

	<!-- http://www.famaf.unc.edu.ar/giovanni/test.owl#newBorn -->
\end_layout

\begin_layout Plain Layout

	<ObjectProperty rdf:about="http://www.famaf.unc.edu.ar/giovanni/test.owl#críaDe"/>
     
\end_layout

\begin_layout Plain Layout

    
\end_layout

\begin_layout Plain Layout

    <!-- http://www.famaf.unc.edu.ar/giovanni/test.owl#aves -->
\end_layout

\begin_layout Plain Layout

    <Class rdf:about="http://www.famaf.unc.edu.ar/giovanni/test.owl#aves">
\end_layout

\begin_layout Plain Layout

		<disjointWith rdf:resource="http://www.famaf.unc.edu.ar/giovanni/test.owl#mamíferos
"/>
\end_layout

\begin_layout Plain Layout

	</Class> 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

...
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	<!-- http://www.famaf.unc.edu.ar/giovanni/test.owl#pichón -->
\end_layout

\begin_layout Plain Layout

		
\end_layout

\begin_layout Plain Layout

	<Class rdf:about="http://www.famaf.unc.edu.ar/giovanni/test.owl#pichón">
\end_layout

\begin_layout Plain Layout

    	<equivalentClass>
\end_layout

\begin_layout Plain Layout

            <Class> 
\end_layout

\begin_layout Plain Layout

            	<intersectionOf rdf:parseType="Collection"> 
\end_layout

\begin_layout Plain Layout

                    <rdf:Description rdf:about="http://www.famaf.unc.edu.ar/giovanni
/test.owl#loro"/>
\end_layout

\begin_layout Plain Layout

                    	<Restriction>
\end_layout

\begin_layout Plain Layout

	                    	<onProperty rdf:resource="http://www.famaf.unc.edu.ar/giovanni
/test.owl#críaDe"/>
\end_layout

\begin_layout Plain Layout

                  		  <someValuesFrom rdf:resource="http://www.famaf.unc.edu.ar/giov
anni/test.owl#loro"/>
\end_layout

\begin_layout Plain Layout

	                    </Restriction>
\end_layout

\begin_layout Plain Layout

                </intersectionOf>
\end_layout

\begin_layout Plain Layout

			</Class>
\end_layout

\begin_layout Plain Layout

		</equivalentClass>
\end_layout

\begin_layout Plain Layout

	</Class> 
\end_layout

\begin_layout Plain Layout

</rdf:RDF>
\end_layout

\begin_layout Plain Layout

<!-- Generated by the OWL API (version 4.2.1.20160306-0044) https://github.com/owlcs
/owlapi --> 	
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:XMLcode"

\end_inset

Código XML generado para la ontología definida
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ahora que tenemos nuestra ontología en formato OWL, corramos nuestra herramienta
 y veamos qué obtenemos.
\end_layout

\begin_layout Standard
El módulo DL2ML toma la ontología de la 
\begin_inset Flex CT - auto cross-reference
status open

\begin_layout Plain Layout

fig:XMLcode
\end_layout

\end_inset

 y genera la fórmula modal de la 
\begin_inset Flex CT - auto cross-reference
status open

\begin_layout Plain Layout

fig:dl2ml
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

begin (A(P8 --> P11));
\end_layout

\begin_layout Plain Layout

((A(P5 --> (P8 ^ (<R1>P8)))) ^ (A((P8 ^ (<R1>P8)) --> P5)));
\end_layout

\begin_layout Plain Layout

((A(P8 --> (P11 ^ (<R2>P11)))) ^ (A((P11 ^ (<R2>P11)) --> P8)));
\end_layout

\begin_layout Plain Layout

...
\end_layout

\begin_layout Plain Layout

((A(P3 --> (P11 ^ (<R2>P11)))) ^ (A((P11 ^ (<R2>P11)) --> P3)))
\end_layout

\begin_layout Plain Layout

end
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:dl2ml"

\end_inset

Fórmula modal generada por DL2ML
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
El módulo KCNF toma la fórmula modal de la figura 
\begin_inset Flex CT - auto cross-reference
status open

\begin_layout Plain Layout

fig:dl2ml
\end_layout

\end_inset

 y la transforma en la fórmula modal de la 
\begin_inset Flex CT - auto cross-reference
status open

\begin_layout Plain Layout

fig:KCNF
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

begin
\end_layout

\begin_layout Plain Layout

A (P3 v -P17);
\end_layout

\begin_layout Plain Layout

A (P7 v P11);
\end_layout

\begin_layout Plain Layout

...
\end_layout

\begin_layout Plain Layout

A (-P18 v -[R1]-P10);
\end_layout

\begin_layout Plain Layout

A (-P19 v -[R2]-P11)
\end_layout

\begin_layout Plain Layout

end
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:KCNF"

\end_inset

Versión CNF modal de la fórmula generada por KCNF
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
El módulo SY4NCL toma la fórmula CNF modal de la 
\begin_inset Flex CT - auto cross-reference
status open

\begin_layout Plain Layout

fig:KCNF
\end_layout

\end_inset

 y genera el grafo de la 
\begin_inset Flex CT - auto cross-reference
status open

\begin_layout Plain Layout

fig:sy4ncl
\end_layout

\end_inset

 en formato bliss, junto con el mapeo de literales a nodos de la 
\begin_inset Flex CT - auto cross-reference
status collapsed

\begin_layout Plain Layout

fig:nodemap
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

p edge 128 156
\end_layout

\begin_layout Plain Layout

n 1 1
\end_layout

\begin_layout Plain Layout

n 2 3
\end_layout

\begin_layout Plain Layout

...
\end_layout

\begin_layout Plain Layout

e 1 2
\end_layout

\begin_layout Plain Layout

e 3 4
\end_layout

\begin_layout Plain Layout

e 2 3 
\end_layout

\begin_layout Plain Layout

...
\end_layout

\begin_layout Plain Layout

e 128 10
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:sy4ncl"

\end_inset

Grafo (en formato BLISS) generado por SY4NCL
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

<md> <lit> <node_id>
\end_layout

\begin_layout Plain Layout

0 19 46
\end_layout

\begin_layout Plain Layout

0 18 28
\end_layout

\begin_layout Plain Layout

0 17 6
\end_layout

\begin_layout Plain Layout

...
\end_layout

\begin_layout Plain Layout

0 -3 4 
\end_layout

\begin_layout Plain Layout

0 -4 61
\end_layout

\begin_layout Plain Layout

...
\end_layout

\begin_layout Plain Layout

0 -18 27
\end_layout

\begin_layout Plain Layout

0 -19 45
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:nodemap"

\end_inset

Mapeo de nodos a literales generado por SY4NCL
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La especificación del grafo de la 
\begin_inset Flex CT - auto cross-reference
status open

\begin_layout Plain Layout

fig:nodemap
\end_layout

\end_inset

 es tomada por el módulo BLISS, el cual realiza la detección de automorfismos
 en el grafo y genera como salida estadísticas junto con la información
 de los generadores (si los hubiese) tal como se presenta en la 
\begin_inset Flex CT - auto cross-reference
status open

\begin_layout Plain Layout

fig:bliss
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Computation time: 0.00705 sec 
\end_layout

\begin_layout Plain Layout

Color count:[38,36,38,1,1,0,0,3,3,0,0,4,4,0,0] 
\end_layout

\begin_layout Plain Layout

|Nodes|: 128 
\end_layout

\begin_layout Plain Layout

|Edges|: 156 
\end_layout

\begin_layout Plain Layout

Generator: (1,51)(2,52)(3,22)(4,21)(5,53)(6,54)(13,19)(14,20)(23,35)(24,36)(25,3
7)(26,38)(59,65)(60,66)(61,67)(62,68)(63,77)(64,78)(79,102)(80,103)(81,104)(84,9
3)(85,94)(86,95)(108,114)(109,115)(110,116)(111,126)(112,127)(113,128) 
\end_layout

\begin_layout Plain Layout

...
\end_layout

\begin_layout Plain Layout

Generators:     1 
\end_layout

\begin_layout Plain Layout

Max level:      1 
\end_layout

\begin_layout Plain Layout

|Aut|:          2 
\end_layout

\begin_layout Plain Layout

Total time:	0.00 seconds
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:bliss"

\end_inset

Output de BLISS
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
Observando las estadísticas generadas por BLISS podemos conocer que el grafo
 explorado tiene 123 nodos (
\emph on
nodes
\emph default
) y 156 aristas (
\emph on
edges
\emph default
), que el grafo cuenta con un automorfismo generador (
\emph on
generators
\emph default
), que el tamaño del grupo de automorfismos, 
\begin_inset Formula $\text{|A|}$
\end_inset

, es 2 y que el tiempo que llevó computar el generador fue de 0.00705 segundos.
\end_layout

\begin_layout Standard
Como vemos, BLISS fue capaz de encontrar autoformismos en el grafo.
 El siguiente paso es traducir los automorfismos a simetrías de nuestra
 
\begin_inset Formula $\mathcal{KB}$
\end_inset

.
\end_layout

\begin_layout Standard
El módulo MAPPER toma las simetrías encontradas por BLISS y realiza el mapeo
 a simetrías de la ontología de entrada.
 La 
\begin_inset Flex CT - auto cross-reference
status open

\begin_layout Plain Layout

fig:map1
\end_layout

\end_inset

 muestra la simetría resultante.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

(gato perro)(caballo gato)(gatito cachorro)(potrillo gatito)
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:map1"

\end_inset

Simetría entre los conceptos
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Como era de esperarse, encontramos que 
\emph on
gato
\emph default
, 
\emph on
perro
\emph default
 y 
\emph on
caballo
\emph default
 son simétricos, en el sentido que cumplen con las mismas propiedades.
 Lo mismo pasa con 
\emph on
gatito
\emph default
, 
\emph on
cachorro
\emph default
 y 
\emph on
potrillo
\emph default
.
\end_layout

\begin_layout Standard
Ahora bien, ¿qué pasa si agregamos una propiedad nueva a nuestra 
\begin_inset Formula $\mathcal{KB}$
\end_inset

? Por ejemplo, agreguemos el axioma de la 
\begin_inset Flex CT - auto cross-reference
status open

\begin_layout Plain Layout

fig:simbreak
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

val nueveVidas = ObjectProperty(prfx#tiene9vidas)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

xs += gato EquivalentTo (mamífero and (nueveVidas some  mamífero)) 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:simbreak"

\end_inset

Axioma para romper algunas simetrías
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Si volvemos a ejecutar las herramientas encontramos la simetría de la 
\begin_inset Flex CT - auto cross-reference
status open

\begin_layout Plain Layout

fig:map2
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

(perro caballo)(cachorro potrillo)
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:map2"

\end_inset

Nueva simetría obtenida
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Como era de esperar ahora nuestra herramienta ya no encuentra como simétricas
 a la clase de 
\emph on
gato
\emph default
 con 
\emph on
perro
\emph default
 o 
\emph on
caballo
\emph default
, porque ésta tiene una propiedad que las otras clases no tienen.
 También es importante recalcar que la clase 
\emph on
gatito
\emph default
 dejó de ser equivalente a las clases 
\emph on
potrillo
\emph default
 y 
\emph on
cachorro
\emph default
, esto pasa porque, aunque no le hayamos agregado ninguna propiedad explícitamen
te, esta clase comparte propiedades de la clase 
\emph on
gato
\emph default
 y por lo tanto comparte la propiedad 
\emph on
nueveVidas
\emph default
.
\end_layout

\end_body
\end_document
